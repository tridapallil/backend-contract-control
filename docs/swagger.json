{
  "openapi": "3.0.0",
  "info": {
    "title": "Freelancer API",
    "version": "1.0.0",
    "description": "API documentation for a Freelancer application"
  },
  "servers": [
    {
      "url": "http://localhost:3001/"
    }
  ],
  "paths": {
    "/contracts/{id}": {
      "get": {
        "summary": "Get contract by ID",
        "description": "Returns the contract details if it belongs to the profile calling.\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the contract",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "profile_id",
            "in": "header",
            "required": true,
            "description": "ID of the profile",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contract"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Contract not found or not authorized"
          }
        }
      }
    },
    "/contracts": {
      "get": {
        "summary": "Get contracts",
        "description": "Returns a list of contracts belonging to the user, excluding terminated contracts.\n",
        "parameters": [
          {
            "name": "profile_id",
            "in": "header",
            "required": true,
            "description": "ID of the profile",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Contract"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/jobs/unpaid": {
      "get": {
        "summary": "Get unpaid jobs",
        "description": "Get all unpaid jobs for a user (client or contractor) for active contracts only.\n",
        "parameters": [
          {
            "name": "profile_id",
            "in": "header",
            "required": true,
            "description": "ID of the profile",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Job"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/jobs/{job_id}/pay": {
      "post": {
        "summary": "Pay for a job",
        "description": "Pay for a job. A client can only pay if their balance is sufficient.\n",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "description": "ID of the job",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "profile_id",
            "in": "header",
            "required": true,
            "description": "ID of the profile",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request, insufficient funds or other payment failure"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/balances/deposit/{userId}": {
      "post": {
        "summary": "Deposit money into balance",
        "description": "Deposit money into the balance of a client, subject to certain limits.\n",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "ID of the user",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "profile_id",
            "in": "header",
            "required": true,
            "description": "ID of the profile",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request, deposit amount exceeds limit"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/admin/best-profession": {
      "get": {
        "summary": "Get best profession",
        "description": "Returns the profession that earned the most money in the specified time range.\n",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "required": true,
            "description": "Start date",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "end",
            "in": "query",
            "required": true,
            "description": "End date",
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "profession": {
                      "type": "string"
                    },
                    "total_earnings": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/admin/best-clients": {
      "get": {
        "summary": "Get best clients",
        "description": "Returns the clients who paid the most for jobs in the specified time period.\n",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "required": true,
            "description": "Start date",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "end",
            "in": "query",
            "required": true,
            "description": "End date",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of clients to return",
            "schema": {
              "type": "integer",
              "default": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "client_id": {
                        "type": "string"
                      },
                      "total_paid": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Profile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "profession": {
            "type": "string"
          },
          "balance": {
            "type": "number",
            "format": "float"
          },
          "type": {
            "type": "string",
            "enum": [
              "client",
              "contractor"
            ]
          }
        }
      },
      "Contract": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "terms": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "new",
              "in_progress",
              "terminated"
            ]
          }
        }
      },
      "Job": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "float"
          },
          "paid": {
            "type": "boolean"
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  }
}
